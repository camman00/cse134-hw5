name: Deploy to Remote via rsync (password)

on:
  push:
    branches: [ main ]   # change if you deploy from another branch
jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
      REMOTE_USER: ${{ secrets.REMOTE_USER }}
      REMOTE_PASSWORD: ${{ secrets.REMOTE_PASSWORD }}
      REMOTE_PATH: ${{ secrets.REMOTE_PATH }}
      SSH_PORT: ${{ secrets.SSH_PORT }} # optional; default 22 if unset

    steps:
      - name: Check out repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install sshpass
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass

      - name: (Optional) Add server to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -p "${SSH_PORT:-22}" -H "$REMOTE_HOST" >> ~/.ssh/known_hosts || true

      - name: Ensure target directory exists
        run: |
          SSHPASS="$REMOTE_PASSWORD" sshpass -e ssh \
            -p "${SSH_PORT:-22}" \
            -o StrictHostKeyChecking=no \
            "$REMOTE_USER@$REMOTE_HOST" "mkdir -p '$REMOTE_PATH'"

      - name: Rsync to remote (respect .gitignore)
        run: |
          SSHPASS="$REMOTE_PASSWORD" sshpass -e rsync -az --delete \
            --filter=':- .gitignore' \
            --exclude='.git/' \
            -e "ssh -p ${SSH_PORT:-22} -o StrictHostKeyChecking=no" \
            ./ "$REMOTE_USER@$REMOTE_HOST:$REMOTE_PATH/"

      # If your remote rsync is too old for the .gitignore filter, use this instead:
      # - name: Rsync (fallback via git ls-files)
      #   run: |
      #     git ls-files -z --cached --others --exclude-standard \
      #       | SSHPASS="$REMOTE_PASSWORD" sshpass -e rsync -az --delete \
      #         --files-from=- --from0 \
      #         -e "ssh -p ${SSH_PORT:-22} -o StrictHostKeyChecking=no" \
      #         ./ "$REMOTE_USER@$REMOTE_HOST:$REMOTE_PATH/"
